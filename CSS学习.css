@charset "UTF-8";
/**
 * @date    2018-02-05 15:02:14
 * @version $Id$
 */

/**
 * CSS = 层叠样式表 = Cascading Style Sheet
 * XML = Extensible Markup Language = 可扩展编辑语言
 * <a></a>标签，或者叫做anchor（锚）标签
 * 如果你在网页中使用了JavaScript，就要将JavaScript代码放在样式表之后，许多JavaScript都依赖CSS，因此需要先添加CSS，
 * 就可以确保JavaScript程序能够具备它要生效所需要的所有信息。
 */

/**
 * HTML5
 * <link rel="stylesheet" href="css/styles.css">
 * HTML4.01与此类似，只是需要增加一个type属性
 * <link rel="stylesheet" type="text/css" href="css/styles.css">
 * XHTML,与HTML4.01相似，只是在标签结尾处需要有一个关闭的正斜线
 * <link rel="stylesheet" type="text/css" href="css/styles.css"/>
 */

/**
 * 用CSS链接样式表
 * CSS本身有一种添加外部样式表的方法:@import指令。把这个指令添加到一个HTML的<style>标签中，像这样：
 * 		<style>
 * 			@import url(css/styles.css);
 * 		</style>
 */

/**
 * 伪类和伪元素
 * 有时候，你需要选择本身没有标签，但是仍然易于识别的网页部位，比如段落首行
 * 或鼠标滑到过的链接。CSS为他们提供了吸血选择器：伪类(pseudo-class)和伪元素（pseudo-element）.
 *
 * 给链接定义样式
 * 		有4个伪类(pseudo-class)可以让你根据访问者与该链接的交互方式，将链接设置成4中不同的状态之一。他们
 * 		标志着链接处于以下4种状态之一。
 * 			a:link是指访问者还没访问到、鼠标也尚未滑到过或单击过的所有链接。这是正常的、为访问过的网页链接;
 * 			
 * 			a:visited是指依据web浏览器的历史记录，访问者之前已经单击过的链接。你可以将这类链接设置成不同于
 * 			正常的链接，以便提醒访问者：”嗨，你已经去过那里了！“;
 * 			
 * 			a:hover让你在访问者的鼠标滑过链接时改变该链接的展现效果。创建这种变换效果并不只是为了好玩，他们
 * 			还可以为导航栏上的按钮提供有益的视觉反馈;
 * 			你还可以将伪类：hover用在元素上，而不是用在连接上，例如，当访问者的鼠标经过<p>或<div>里面的文字时，
 * 			用它高亮显示那些文字。在这种情况下，如果不想用a:hover添加鼠标滑过的效果，也可以创建一个名为p:hover
 * 			的样式，用于有鼠标滑过任何段落时产生一种特殊的效果。如果只想对应用了特定类(highlight)的标签设置样式，
 * 			只需创建一个名为.highlight:hover的样式即可;
 *
 * 			a:active让你决定当访问者单击时链接的展现效果。换句话说，其作用范围包括有人按下鼠标按钮却还没有放开
 * 			的那短暂的十亿分之一秒;
 *
 * 		CSS提供了两个伪元素 ：first-letter和 ：first-line
 * 			：：first-letter可以创建下落的首字母：让一个首字母从接下来的段落中蹦出来，并且使用更大或者更粗的字体格式，
 * 			就像本书每个章节开头的首字母那样。
 *
 * 			：：first-line可以用一种不同的颜色定义段落的首行，吸引读者的眼球，是文字显得更加醒目和鲜艳。
 *
 * 			：focus 选择器最适用于给访问者提供反馈
 *
 * 			：before 能够完成其他选择器无法完成的一些事情：他能在指定元素的前面添加内容。技术术语：创造内容
 * 			：after 与before相反
 *
 * 			：：selection 这个CSS3选择器是针对访问者已经在网页上选中的项目。例如，当访问者单击并拖动鼠标
 * 			经过文本时，浏览器就会高亮显示该文本，访问者就可以复制这些文本。该选择器只能设置color和background-color
 * 			这两个属性。（这个选择器只有双冒号）
 *
 * 属性选择器
 * 		CSS提供了一种根据其所具备的属性给标签设置样式的方法。例如，你想在网页上的图片周围加上边框线-但是只加在重要
 * 		的照片周围。
 * 		例如 input[type="text"] 选择表单中的文本框
 *
 * 子选择器
 * 		子选择器可以给另一个标签的字标签设置样式。子选择器使用另一个符号--尖括号(>)来表示两个元素之间的关系。例如，
 * 		选择器body > h1 将选择<bordy>标签子标签中的所有<h1>标签。
 *
 * 子类型选择器
 * 		它作用于带有某种特殊类型的HTML标签的子元素。例如，假设你想要以一种特殊的方法给侧边栏中的第一个段落定义格式，
 * 		但在一些页面上，这个侧边栏是从一个<h2>标签开始的，而在另外一些页面上，它又是从一个<p>标签开始的。因此你可以
 * 		用一个标签选择器 :first-of-type来选择。
 *
 * ：not()选择器 被称为否定伪类，可以帮助你选择不是其他东西的某件东西
 *
 *
 * 用样式继承节省时间
 * 		什么是继承，
 * 			简单的说，继承是指应用在一个标签上的那些CSS属性被传到其内嵌标签上的过程。例如，<p>标签总是嵌在<body>
 * 			标签里面，因此应用在<body>标签上的属性会被<p>继承。
 *
 * 样式冲突的原因：
 * 		1.从多个祖先处继承了同一个属性的时候；
 * 		2.当一个或多个样式应用于同一个元素的时候
 *
 *
 * 颜色表示
 * 		用十六进制表示颜色
 * 			网页设计师采用的最早的颜色系统是十六进制符号。一个颜色值-比如#6600FF--实际上包含了三组十六进制的数字。
 * 			在本例中即指66、00和FF--它们分别指定了红、绿和蓝的浓度。最后得到的颜色值就是由这些数字指定的红、绿和蓝色
 * 			混合后的浓度。
 * 			如果每一组数中的两个数字相同，就可以吧这个十六进制的数字缩短成为只有3个字符，如将#6600FF缩短为#60F，或者
 * 			将#FFFFFF缩短为#FFF。
 * 		用RGB表示颜色值
 * 			你也可以用计算机图形处理软件中很常见的颜色表示法：RGB-----Red(红)、Green(绿)和 Blue（蓝）。这种颜色值由3
 * 			个数组成，每个数各代表一种色调（红、绿、蓝），它们均用百分比（0%~100%），或者0~255之间的数字表示。因此，如果要将
 * 			文本颜色设置成白色（也许是为了将文本从黑色背景中凸显出来），就可以用这个值。
 * 			{color:rgb(100%,100%,100%);}
 * 		 	或者
 * 		 	{color:rgb(255,255,255);}
 *     	GRBA
 *     		要想增加网页的深度，可以考虑使用比较新颖的颜色方法。RGBA表示Red(红)、Green(绿)、Blue（蓝）和Alpha（透明度），
 *     		他的作用与RGB颜色一样，只是多了一个透明度的通道。也就是说，可以指定一个不透光度级别，使颜色看起来不像是实心
 *     		的，而是透明的。在RGB颜色基础的后面再添加最后一个数字，这个数值处于0~1之间。值为0表示颜色是不可见的，即完全
 *     		透明；而值为1则表示颜色完全不透光：
 *     			{color:rgba(255,255,255,.5);}
 *      HSL
 *      	表示hue(色相)、saturation(饱和度)和lightness(亮度)。这是定义颜色的另一种方法。
 *      	语法示例：hsl(0,100%,50%);
 *      	hsl()中有三个值。第一个是一个0~360的程度值，表示色相的范围。如果你能够记住彩虹的颜色顺序：红、橙、黄、绿、蓝、
 *      	青、紫（缩写为GOYGBIV）。就大概清楚你需要指定的颜色值了。红色是0（也就是360，因为这是一个完整的圆圈），黄色大约
 *      	为50，每一种颜色间隔大约为51度。
 *      	第二个大概是饱和度，或者说颜色的纯度。饱和度是0%~100%之间的百分比表示的。0%是表示没有饱和度，即为全灰色。事实
 *      	上，无论你指定的是什么色相，值为0%时都同样会产生灰色。值为100%则表示纯色，明快而亮丽。第三个值是亮度值，用0%（全
 *      	黑）~100%（全白）之间的百分比表示。如果想要纯色，可以使用50%。
 *
 * 			HSL比RGB或十六进制颜色值都更加直观。但是如果你觉得它不容易理解，可以不使用。
 *    	HSLA
 *    		与RGB和RGBA使用方法类似。
 */